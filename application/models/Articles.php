<?php

/**
 * Статьи.
 *
 * This class has been auto-generated by the Doctrine ORM Framework.
 */
class Articles extends BaseArticles implements ZfeFiles_Manageable
{
    public static $nameSingular = 'Статья';
    public static $namePlural = 'Статьи';

    protected static $fileSchemas;

    public static function getFileSchemas(): ZfeFiles_Schema_Collection
    {
        if (!static::$fileSchemas) {
            static::$fileSchemas = new ZfeFiles_Schema_Collection();
            static::$fileSchemas->add(new ZfeFiles_Schema_Default([
                'code' => 'file',
                'title' => 'Файл',
                'required' => true,  /** @todo Добавить учет обязательности */ 
                'multiple' => true,
            ]));
            static::$fileSchemas->add(new ZfeFiles_Schema_Image([
                'code' => 'image',
                'title' => 'Картинки',
                'multiple' => true,
            ]));
            static::$fileSchemas->add(new ZfeFiles_Schema_Audio([
                'code' => 'audio',
                'title' => 'Аудио',
                'multiple' => true,
            ]));
            static::$fileSchemas->add(new ZfeFiles_Schema_Video([
                'code' => 'video',
                'title' => 'Видео',
                'multiple' => true,
            ]));
        }

        return static::$fileSchemas;
    }

    public function toArray($deep = true, $prefixKey = false)
    {
        $array = parent::toArray($deep, $prefixKey);

        foreach (static::getFileSchemas() as $fileSchema) {
            $code = $fileSchema->getCode();
            $array[$code] = [];
            $files = ZfeFiles_Dispatcher::loadFiles($this, $code);
            foreach ($files as $file) {  /** @var ZfeFiles_FileInterface $file */
                $array[$code][] = $file->getDataForUploader();
            }
        }

        return $array;
    }

    public function fromArray(array $array, $deep = true)
    {
        foreach (static::getFileSchemas() as $fileSchema) {
            $code = $fileSchema->getCode();
            if (array_key_exists($code, $array)) {
                ZfeFiles_Dispatcher::updateFiles($this, $code, $array[$code]);
                unset($array[$code]);
            }
        }

        parent::fromArray($array, $deep);
    }
}
